package constructors;

/*


 ** default constructor is generated by constructor when no arg object is created and our class not having any cons of its own

 ** default constructor is generated by compiler when not having any constructor from programmer

 ** default constructor access is always same as class modifier, default constructor is always no arg constructor

** if class is public default const will be public, if class is default it will be default

** default constructor contains only one line of code super();

** no arg call to parent class constructor

** compiler will generate super() as first line
 in each and every constructor regardless of whether default is there or not

 ** first line inside every constructor should be either super or this
 compile will write super() for every constructor if not written

 super() or this() can only come as first line in constructor, so can not come together
 they can be used only inside constructor and not anywhere else


 */

public class Default {

    public static void main(String[] args) {
        Default d = new Default(); // here default constructor is created by compiler and run
    }
}

class Parent {

    Parent() {
        System.out.println("asd");
       // super(); // super can only be first statement inside const
    }

    Parent(int x) {
        System.out.println("asd");
       // this(); // call to this must be first statement inside constructor
    }


    Parent(int x, int y) {
        super();
         // this(); // call to this must be first statement inside constructor
    }

    Parent(String x, int y) {

         this();

        // super(); // super can only be first statement inside const
    }

}
